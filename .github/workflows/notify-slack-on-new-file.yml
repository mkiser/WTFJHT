name: Notify Slack on New File in _posts

on:
  push:
    branches:
      - master
    paths:
      - '_posts/**'
  workflow_dispatch:

jobs:
  notify_slack:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Debug info
        run: |
          echo "Repository Status:"
          git status
          echo "Most Recent Commit:"
          git log -1

      - name: Check for new files and build message
        id: files
        run: |
          if git rev-parse HEAD^ >/dev/null 2>&1; then
            NEW_FILES=$(git diff --diff-filter=A --name-only HEAD^ HEAD _posts/)
            if [[ -n "$NEW_FILES" ]]; then
              MESSAGE=""
              for FILE in $NEW_FILES; do
                TITLE=$(awk '/^---/{f=!f; next} f && /^title:/ {sub(/^title:[ ]*/, "", $0); print $0; exit}' "$FILE")
                DESCRIPTION=$(awk '/^---/{f=!f; next} f && /^description:/ {sub(/^description:[ ]*/, "", $0); print $0; exit}' "$FILE")
                URL="https://github.com/mkiser/WTFJHT/blob/master/${FILE}"
                MESSAGE+="ðŸ“¦ <${URL}|*${TITLE}: ${DESCRIPTION}*> â†’ GitHub\n"
              done

              # Escape for GitHub output
              MESSAGE="${MESSAGE//'%'/'%25'}"
              MESSAGE="${MESSAGE//$'\n'/'%0A'}"
              MESSAGE="${MESSAGE//$'\r'/'%0D'}"

              echo "message=$MESSAGE" >> $GITHUB_OUTPUT
            else
              echo "message=No new files added to _posts." >> $GITHUB_OUTPUT
            fi
          else
            echo "message=No previous commit to compare." >> $GITHUB_OUTPUT
          fi

      - name: Send message to Slack
        if: ${{ steps.files.outputs.message != 'No new files added to _posts.' && steps.files.outputs.message != 'No previous commit to compare.' }}
        run: |
          echo "Sending message:"
          echo "${{ steps.files.outputs.message }}"

          PAYLOAD=$(jq -nc --arg text "${{ steps.files.outputs.message }}" '{text: $text}')

          curl -X POST -H 'Content-type: application/json' \
            --data "$PAYLOAD" \
            ${{ secrets.SLACK_WEBHOOK_URL }}
